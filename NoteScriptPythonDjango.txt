---------------------------------------------------
Basic Python Django for Core Wisdom
---------------------------------------------------
DAY 1
---------------------------------------------------
ตรวจเช็คเวอร์ชันของ Python
---
python --version หรือ python -V
pip --version หรือ pip -V
where python

การสร้าง Virtual Enviroment
---
python -m venv env

การ Activate Enviroment
---
env\Scripts\activate

คำสั่งตรวจเช็ครายการ package ภายใน env
---
pip list

สร้างโฟลเดอร์ 
PythonDjangoCoreWisdom
   |-- BasicPython
   |-- BasicDjango

การ Export ชื่อ Library (Package) ในโปรเจ็กต์
---
pip freeze > requirements.txt

สร้างไฟล์ .gitignore เพื่อกำหนดว่าไม่ต้องเก็บไฟล์ใดบ้างขึ้น git
---
env
__pycache__

จากนั้นทำการเก็บข้อมูลลง git
---
สำหรับการใช้งาน git ครั้งแรก
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com

git init
git add .
git commit -m "first commit"

การสร้าง env และ import package จากไฟล์ requirements.txt กลับเข้าโปรเจ็กต์
---
python -m venv env
env\Scripts\activate

การ install lib จาก requirements.txt
---
pip install -r requirements.txt

การลบ lib ออก
pip uninstall -r requirements.txt

---------------------------------------------------
DAY 2
---------------------------------------------------
การขึ้นโปรเจ็กต์ Django
---
Step 1: สร้างโฟลเดอร์โปรเจ็กต์
---
mkdir firstdjango

Step 2: สร้าง Virtual Enviroment
---
cd firstdjango
python -m venv env

Step 3: Activate Virtual Enviroment
---
env\Scripts\activate

Step 4: ติดตั้ง Django 4.0.5
---
pip install Django==4.0.5

เช็คข้อมูล package ที่ติดตั้งภายใน env
---
pip list

Step 5: สร้างโปรเจ็กต์ Django
---
django-admin startproject firstdjango .

Step 6: รันโปรเจ็กต์ Django
---
python manage.py runserver

goto: http://127.0.0.1:8000

Step 7: สร้างแอพใหม่ใน Django
---
django-admin startapp stock

---------------------------------------------------
DAY 3
---------------------------------------------------
การขึ้นโปรเจ็กต์ Django
---
Step 1: สร้างโฟลเดอร์โปรเจ็กต์
---
mkdir inventory

Step 2: สร้าง Virtual Enviroment
---
cd inventory
python -m venv env

Step 3: Activate Virtual Enviroment
---
env\Scripts\activate

Step 4: ติดตั้ง Django 4.0.5
---
pip install Django==4.0.5

เช็คข้อมูล package ที่ติดตั้งภายใน env
---
pip list

Step 5: สร้างโปรเจ็กต์ Django
---
django-admin startproject inventory .

Step 6: รันโปรเจ็กต์ Django
---
python manage.py runserver

goto: http://127.0.0.1:8000

Step 7: สร้างแอพใหม่ใน Django
---
django-admin startapp stock

Step 8: เพิ่มรายการแอพใหม่ใน settings.py
---
INSTALLED_APPS = [
...,
...,
'stock',
]

Step 9: การ Config Static File (settings.py)
---
STATIC_URL = 'static/'
STATICFILES_DIRS = [Path.joinpath(BASE_DIR, 'static')]
STATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')

Step 10: Create a Database
---
Create a database “djangoinventory”

Step 12: Creating Django Model
---

การสร้าง Model
----
ตัวอย่างตาราง stock_product
---
product_name	varchar(128)
product_detail	text
product_barcode	varchar(32)
product_qty	int(4)
product_price	decimal(7,2)
product_image	varchar(64)
product_status	int(1)

from django.db import models


# Create your models here.
class Product(models.Model):
    product_name = models.CharField(max_length=128)
    product_detail = models.TextField()
    product_barcode = models.CharField(max_length=32)
    product_qty = models.IntegerField()
    product_price = models.DecimalField(decimal_places=2, max_digits=7)
    product_image = models.CharField(max_length=64)
    product_status = models.IntegerField()

Step 13: Make a Migrations
---
python manage.py makemigrations

Step 14: ติดตั้ง "mysqlclient" package
---
pip install mysqlclient

Step 15: การ setting database ที่ไฟล์ settings.py
---
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'djangoinventory',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

Step 16: Migrate Database
---
python manage.py migrate

Step 17: คำสั่งสร้าง superuser
---
python manage.py createsuperuser --username samit


Step 18: การเขียน Rest API ใน Django
---
pip install djangorestframework

Step 19: สร้าง app "note"
---
django-admin startapp note

Step 20: กำหนด models.py
---
from django.db import models
from django.utils import timezone
from django.core.validators import MinValueValidator, MaxValueValidator

# Create your models here.
class Note(models.Model):
    title = models.CharField(max_length=100)
    description = models.CharField(max_length=400)
    created_at = models.DateTimeField(default=timezone.now)
    created_by = models.CharField(max_length=50, blank=True, null=True)
    priority = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)])


Step 21: เพิ่มแอพ Note เข้าใน settings.py
---
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'stock',
    'note',
]

Step 22: สร้าง Migration
---
python manage.py makemigrations

Step 23: ทำการ Migrate แอพ note
---
python manage.py migrate note

Super User
---
samit
123456

wichai@email.com
Samit@1234
